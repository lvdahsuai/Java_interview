1.使用消息中间件的原因
	-当系统过于庞大时 如果单线程的去进行服务之间的调用,响应时间会过于漫长,对系统压力较大
	当被调用的所有服务都处理完成才会返回结果.
2.消息中间件作用
	-异步通知被调用的服务,直接返回结果(异步)
	-服务直接解耦合
	-可以帮助服务横向扩展
	-服务之间调用可以保证顺序
3.概念
	关注数据的发送和接受,利用高效可靠的异步消息传递来集成分布式系统
-----------------------------------------------------------------------------------
3.JMS规范
	java中关于面向消息中间件的API,用于在两个应用程序之间或分布式系统中发送消息,进行异步同行
	-支持模型 p2p pub/sub 
	-支持类型 java中常见的数据类型
	-队列模式
		-队列中的消息只能被一个消费者消费
		-客户端包括生产者和消费者
		-消费者可以随时消费队列中的消息
	-主题模式
		-客户端包括发布者和订阅者
		-主题中的消息被所有订阅者消费
		-消费者不能消费订阅之前就发送到主题中的消息
	-JMS消息相关接口
		链接工厂--创建链接--链接创建一个会话(单线程,可以创建多个)--会话创建生产者\消费者---生产者吧消息发送到目的地---消费者从目的地获取
4.AMQP协议
	提供统一消息服务的应用层标准协议,鲫鱼次协议的客户端与消息中间件可传递消息,不收客户端中间件不同产品不同语言条件限制
	-支持模型 direct danout topic队列 headers sysytem
	-支持类型 二进制消息
--------------------------------------------------------------------------------------

5.常见 中间件
	-ActiveMQ(java优先)
		-支持多语言.多协议
		-消息持久化
		-中小企业消息应用,不适合上千了队列的应用
	-rabbitMQ
		-AMQP协议的完整实现
		-消息持久化
		-适合对性稳定要求高的企业级用用
	-Kafka
		-日志服务储存
		-严格的顺序机制
		-高吞吐量
		-依赖zk
		-应用于大数据日志处理或对实时性(少量顺序),可靠性(少量数据丢失)要求稍低的场景使用
	
-----------------------------------------------------------------------------------------------------
6.Spring中的JMS
	-连接池
		-singleConnectionFactory
			整个一直使用一个链接进行操作
		-CachingConnectionFactory
			继承single 新增缓存功能
	-JMSTemlate
		spring中注入直接使用
	-MessageListner
		时限一个onMessage方法 直接收一个Message参数

	